Welcome to my advance Express js tutorial, This tutorial is straight to the point  

[**********Setup**********]

npm init -y 
npm install express

# Package.json setup 
{
  "name": "expressjs",
  "version": "1.0.0",
  "description": "",
  "main": "index.mjs",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1",
    "start":"nodemon ./src/index.mjs"
  
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "dependencies": {
    "express": "^4.19.2"
  },
  "devDependencies": {
    "nodemon": "^3.1.0"
  },
  "type":"module"
}

[**********Index.mjs Setup**********]
import express from "express"


const app = express()

const PORT = process.env.PORT|| 3000;


app.listen(PORT, ()=>{
    console.log(`Server running on port ${PORT}`)
})

[---------Route------]

#GET Route 

import express from "express"


const app = express()

const PORT = process.env.PORT|| 3000;





app.get("/",(req,res)=>{
res.status(200).send({msg:"Kofi Money"})
})

const users = [
    {
        "id":1,
        "fname":"Solo",
    },

    {
        "id":2,
        "fname":"Danso",
    },

    {
        "id":3,
        "fname":"Kofi",
    },







]
app.get("/api/users",(req,res)=>{
    res.status(200).send({users})
})



app.listen(PORT, ()=>{
    console.log(`Server running on port ${PORT}`)
})

# Route Parameters 
import express from "express"


const app = express()

const PORT = process.env.PORT|| 3000;





app.get("/",(req,res)=>{
res.status(200).send({msg:"Kofi Money"})
})

const mockUsers = [
    {
        "id":1,
        "fname":"Solo",
    },

    {
        "id":2,
        "fname":"Danso",
    },

    {
        "id":3,
        "fname":"Kofi",
    },

]


app.get("/api/users",(req,res)=>{
    res.status(200).send({msg:mockUsers})
})

app.get("/api/users/:id",(req, res)=>{
const parsedId = parseInt(req.params.id)

if(isNaN(parsedId)){
    return res.status(400).send("Bad Request ")
}


const findUser = mockUsers.find((user)=>user.id==parsedId)
if(findUser ==null){
    return res.status(400).send({msg:"User not found"})
}
else{
    return res.status(200).send(findUser);
}






})



app.listen(PORT, ()=>{
    console.log(`Server running on port ${PORT}`)
})




















































